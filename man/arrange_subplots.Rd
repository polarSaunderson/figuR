% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/arrange_subplots.R
\name{arrange_subplots}
\alias{arrange_subplots}
\title{Creates a layout for subplots with fine-grained control}
\usage{
arrange_subplots(locations, useSize = FALSE, plotOrder = NULL)
}
\arguments{
\item{toKeep}{"string": Which of the four options should be kept?
* f    functions
* v    variables/values
* p    plots
* c    console
* e    environment (i.e. functions & variables)}
}
\description{
This function is largely a wrapper around the `layout()`
  function as a I don't find the logic and syntax intuitive. Locations of
  the subplots / panels can be arranged using a 100 x 100 grid; the values
  from 1,1 (top-left) to 100,100 (bottom-right). Grid cell numbers should
  not be repeated (unless an overlap is required, but take care with that).
  There are two ways to define the locations; see the "useSize" argument
  and the examples.
}
\examples{
  # These both produce the same output:
  t1 <- list(c(1, 2, 1, 2),
             c(50, 70, 50, 80),
             c(88, 94, 89, 100))
  arrange_subplots(t1, useSize = FALSE) # uses the 4 coordinates
  layout.show(length(t1))

  t2 <- list(c(1, 1, 1, 1),
             c(50, 50, 20, 30),
             c(88, 89, 6, 11))
  arrange_subplots(t2, useSize = TRUE) # uses top-left, width & height
  layout.show(length(t2))

  # Demonstrating plotOrder; compare with above
  arrange_subplots(t1, plotOrder = c(3, 1, 2))
  layout.show(length(t1))

}
