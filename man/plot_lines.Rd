% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_lines.R
\name{plot_lines}
\alias{plot_lines}
\title{Line plot of x and y values}
\usage{
plot_lines(
  x,
  y = NULL,
  addPoints = TRUE,
  lineKula = "#004488FF",
  lwd = 4,
  lty = 1,
  expandLimits = TRUE,
  borderKula = NULL,
  pointKula = "white",
  cex = 1.25,
  pch = 21,
  xpd = TRUE,
  ...
)
}
\arguments{
\item{x}{The x data to plot.}

\item{y}{The y data to plot. y must either be empty, the same length as x,
or a multiple of its length. If empty, 'x' is used as 'y', and 'x'
becomes `1:length(y)`. If length is a multiple of 'x' length , the 'x'
data are repeated, and the 'y' data are treated as separate data series;
'lineKula' is currently ignored in such a situation and each y series is
coloured differently (colours will repeat after 7 y "series").}

\item{addPoints}{LOGICAL: Should points be added on top of the lines (TRUE,
default), or not (FALSE)?}

\item{lineKula}{What colour should the line be?}

\item{lwd}{How thick should the line be?}

\item{lty}{What type (solid, dotted, dashed, etc.) should the line be?}

\item{expandLimits}{LOGICAL: Should `pretty()` limits be used (TRUE), or
exact min & max values (FALSE)? Fed directly into `calc_plot_limits()`.}

\item{borderKula}{What colour should the boundary of the marker be?}

\item{pointKula}{What colour should the centre of the marker be?}

\item{cex}{What size should the marker be?}

\item{pch}{What style should the marker be?}

\item{xpd}{Can the markers be plotted off the chart?}

\item{...}{Any arguments that can be fed into `pre_plot()`.}
}
\description{
This is the figuR equivalent of `plot(x, y, type = "l")` to
  create a simple line chart.
}
\examples{
\dontrun{
  # Data
  x  <- c(1:6)
  y1 <- c(1:6)
  y2 <- c(7:12)
  y3 <- c(8:3)

  # Plots
  par(mar = c(5, 5, 5, 5))
  plot_lines(x = x, y = y1)
  plot_lines(x = x, y = c(y1, y2, y3))
  plot_lines(x = x, y = y2, xName = "newXname")

  # We can also just provide labels if they're unique and correctly ordered
  plot_lines(x = month.abb, y = c(y1, y3), xLabelEvery = 1)

  # But beware here - the following won't plot what you'd hope for
  plot_lines(x = c("Jan", "Feb", "Mar", "Jan", "Feb", "Mar"),
             y = 1:6, xLabelEvery = 1)
}
}
